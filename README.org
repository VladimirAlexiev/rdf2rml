#+OPTIONS: ':nil *:t -:t ::t <:t H:5 \n:nil ^:{} arch:headline author:t broken-links:nil
#+OPTIONS: c:nil creator:nil d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t timestamp:nil title:t toc:5
#+OPTIONS: todo:t |:t
#+TITLE: RDF by Example: rdfpuml for True RDF Diagrams, rdf2rml for R2RML Generation
#+DATE: <2018-12-06>
#+AUTHOR: Vladimir Alexiev
#+EMAIL: vladimir.alexiev@ontotext.com
#+LANGUAGE: en
#+CREATOR: Emacs 25.3.1 (Org mode 9.1.13)
#+OPTIONS: html-link-use-abs-url:nil html-postamble:auto html-preamble:t html-scripts:t
#+OPTIONS: html-style:t html5-fancy:nil tex:nil
#+HTML_DOCTYPE: xhtml-strict
#+HTML_CONTAINER: div
#+DESCRIPTION:
#+KEYWORDS: RDF, visualization, PlantUML, cultural heritage, NLP, NIF, EHRI, R2RML, generation, model-driven, RDF by Example, rdfpuml, rdf2rml

* Introduction
See this presentation:

*RDF by Example: rdfpuml for True RDF Diagrams, rdf2rml for R2RML Generation*
Alexiev, V. In Semantic Web in Libraries 2016 (SWIB 16), Bonn, Germany, November 2016.
[[http://rawgit2.com/VladimirAlexiev/my/master/pres/20161128-rdfpuml-rdf2rml/index.html][Presentation]],
[[http://rawgit2.com/VladimirAlexiev/my/master/pres/20161128-rdfpuml-rdf2rml/index-full.html][HTML]],
[[http://rawgit2.com/VladimirAlexiev/my/master/pres/20161128-rdfpuml-rdf2rml/RDF_by_Example.pdf][PDF]],
[[https://youtu.be/4WoYlaGF6DE][Video]]

RDF is a graph data model, so the best way to understand RDF data schemas (ontologies, application profiles, RDF shapes) is with a diagram. 
Many RDF visualization tools exist, 
but they either focus on large graphs (where the details are not easily visible), 
or the visualization results are not satisfactory, 
or manual tweaking of the diagrams is required. 

We describe a tool *rdfpuml* that makes true diagrams directly from Turtle examples using PlantUML and GraphViz. 
Diagram readability is of prime concern, and rdfpuml introduces various diagram control mechanisms using triples in the ~puml:~ namespace. 
Special attention is paid to inlining and visualizing various Reification mechanisms (described with PRV). 
We give examples from Getty CONA, Getty Museum, AAC (mappings of museum data to CIDOC CRM), 
Multisensor (NIF and FrameNet), EHRI (Holocaust Research into Jewish social networks), Duraspace (Portland Common Data Model for holding metadata in institutional repositories), Video annotation. 

If the example instances include SQL queries and embedded field names, they can describe a mapping precisely. 
Another tool *rdf2rdb* generates R2RML transformations from such examples, saving about 15x in complexity.

See http://twitter.com/hashtag/rdfpuml for news, diagrams and announcements.

* Documentation
- http://rawgit2.com/VladimirAlexiev/rdf2rml/master/doc/rdfpuml.html
- http://rawgit2.com/VladimirAlexiev/rdf2rml/master/doc/rdf2rml.html
Source: [[./doc/rdfpuml.pod]], [[./doc/rdf2rml.pod]]

* Installation
Clone this repo 

- Install Docker and Docker Compose

* [Install docker](https://docs.docker.com/install/)
* [Install docker compose](https://docs.docker.com/compose/install/)

- Build
```
docker-compose build
```

- Place your .ttl file for processing in directory `./ttl` 
- Add any prefixes to ./ttl/prefixes.ttl
- Update and configure plantuml.cfg in directory `./plantuml

- Processing
```
docker-compose up
```

- .puml and .png will be place in ./out


* Evolution
Help needed for the following tasks.
Post bugs and enhancement requests to this repo!

Jonas Smedegaard (@jonassmedegaard, dr at jones fullstop dk) has volunteered, so changes should happen soon.
Development is at https://salsa.debian.org/debian/rdf2rml/branches.

To adopt changes, do something like this. Tp merge *all* commits in the salsa/develop branch:

#+BEGIN_SRC sh
  cd rdf2rml    # i.e. your local clone of your Github project
  git remote add salsa https://salsa.debian.org/debian/rdf2rml.git
  git fetch salsa
  git merge salsa/develop
#+END_SRC

To adopt only single commits from my develop branch, instead do something this instead (replacing final command above; "git remote" is needed only initially):
:  git cherry-pick $commit1 $commit2 $commit3
    


** Done

** Near-term
- Modularize and package better.
- Release on CPAN
- Add Unicode tests (ttl with non-ASCII chars: Cyrillic, French, etc)
- Eliminate the dependency of rdfpuml on [[./lib/RDF/Prefixes/Curie.pm]] once [[https://github.com/kasei/perlrdf/issues/131][perlrdf#131]] is fixed

*** Batch Processing
#1: Batch a number of ~ttl~ files to one ~puml~ file.
Rationale: plantuml is slow to start up, so putting several diagrams in one file will make things faster:
    #+BEGIN_SRC puml
    @startuml file1.png
      # made from file1.ttl
    @enduml
    @startuml file2.png
      # made from file2.ttl
    @enduml
    #+END_SRC
  - However, this interferes with ~make~ processing that regenerates only ~png~ for changed ~ttl~ files.
    So we need a smarter outer script or ~Makefile~ that batches up only the changed ~ttl~ for processing.
  - ~rdfpuml~ should take multiple input files, and write a single output
  - It would also be useful to take a whole folder of ~ttl~ tiles as input

** Mid-Term
- Upgrade to use [[https://github.com/kasei/attean][Attean]] instead of [[https://github.com/kasei/perlrdf][Trine (Perl RDF)]]
- Integrate in Emacs ~org-mode~: write Turtle, see diagram (easy to do)
- Enahnce rdfpuml to allow node colors, icons and tooltips (see [[./ideas]])
- Ability to describe custom reification situations using the Property Reification Vocabulary (PRV)

** Long-Term
- Extend rdf2rml to describe & generate RDF Shapes
- Another tool to visualize RDF Shapes (SHACL and ShEx)
- R2RML works great for RDBMS, but how about other sources?
  Extend rdf2rml to generate:
  - [[http://rml.io][RML:]] extends R2RML to handle RDB, XML, JSON, CSV
  - [[http://github.com/semantalytics/xsparql][XSPARQL:]] extends XQuery with SPARQL construct and JSON input
  - [[https://tarql.github.io/][tarql]]: handles TSV/CSV with SPARQL construct

* Citation
If you use this software, please cite it

RDF by Example: rdfpuml for True RDF Diagrams, rdf2rml for R2RML Generation.
Alexiev, V. In Semantic Web in Libraries 2016 (SWIB 16), Bonn, Germany, November 2016.
[[http://rawgit2.com/VladimirAlexiev/my/master/pres/20161128-rdfpuml-rdf2rml/index.html][Presentation]], [[http://rawgit2.com/VladimirAlexiev/my/master/pres/20161128-rdfpuml-rdf2rml/index-full.html][HTML]], [[http://rawgit2.com/VladimirAlexiev/my/master/pres/20161128-rdfpuml-rdf2rml/RDF_by_Example.pdf][PDF]], [[https://youtu.be/4WoYlaGF6DE][Video]].


#+BEGIN_SRC bibtex
@InProceedings{Alexiev-rdfpuml-rdf2rml,
  author       = {Vladimir Alexiev},
  title        = {{RDF by Example: rdfpuml for True RDF Diagrams, rdf2rml for R2RML Generation}},
  booktitle    = {Semantic Web in Libraries 2016 (SWIB 16)},
  year         = 2016,
  month        = nov,
  address      = {Bonn, Germany},
  url_Slides   = {http://rawgit2.com/VladimirAlexiev/my/master/pres/20161128-rdfpuml-rdf2rml/index.html},
  url_HTML     = {http://rawgit2.com/VladimirAlexiev/my/master/pres/20161128-rdfpuml-rdf2rml/index-full.html},
  keywords     = {RDF, visualization, PlantUML, cultural heritage, NLP, NIF, EHRI, R2RML, generation, model-driven, RDF by Example, rdfpuml, rdf2rml},
  url_PDF      = {http://rawgit2.com/VladimirAlexiev/my/master/pres/20161128-rdfpuml-rdf2rml/RDF_by_Example.pdf}, 
  url_Video    = {https://youtu.be/4WoYlaGF6DE},
  type         = {presentation},
  abstract     = {RDF is a graph data model, so the best way to understand RDF data schemas (ontologies, application profiles, RDF shapes) is with a diagram. Many RDF visualization tools exist, but they either focus on large graphs (where the details are not easily visible), or the visualization results are not satisfactory, or manual tweaking of the diagrams is required. We describe a tool *rdfpuml* that makes true diagrams directly from Turtle examples using PlantUML and GraphViz. Diagram readability is of prime concern, and rdfpuml introduces various diagram control mechanisms using triples in the puml: namespace. Special attention is paid to inlining and visualizing various Reification mechanisms (described with PRV). We give examples from Getty CONA, Getty Museum, AAC (mappings of museum data to CIDOC CRM), Multisensor (NIF and FrameNet), EHRI (Holocaust Research into Jewish social networks), Duraspace (Portland Common Data Model for holding metadata in institutional repositories), Video annotation. If the example instances include SQL queries and embedded field names, they can describe a mapping precisely. Another tool *rdf2rdb* generates R2RML transformations from such examples, saving about 15x in complexity.},
}
#+END_SRC

* Related Work

- https://github.com/mrihtar/rdfgraph by Matjaz Rihtar (a colleague in euBusinessGraph) is inspired by rdfpuml, written in Python 2.7, and uses Redland's librdf library
